<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hm.mapper.StudentMapper">

    <select id="getAll" resultType="com.hm.pojo.Student">
        select * from student;
    </select><!--只有字符串需要额外判断name不能为空字符串   全都要判断为不为null  不能写entry_date!=null -->

    <select id="getAllByPage" resultType="com.hm.pojo.Student">
        select s.*,c.name clazzName from student s left join clazz c on s.clazz_id=c.id
        <where>
            <if test="name!=null and name!=''">
                s.name like concat ('%',#{name},'%')
            </if>
            <if test="degree !=null">
                and s.degree=#{degree}
            </if>
            <if test="clazzId !=null">
                and s.clazz_id=#{clazzId}
            </if>
        </where>
    </select>

    <update id="addViolatScore">
        update student
        <set>
            violation_score=violation_score+#{score},
            violation_count=violation_count+1,
            update_time=#{updateTime}
        </set>
        where id=#{id}
    </update>
    <insert id="addStu">
        insert into student (name,no,gender,phone,degree,id_card,is_college,address,graduation_date,violation_count,violation_score,clazz_id,create_time,update_time)
        values (#{name},#{no},#{gender},#{phone},#{degree},#{idCard},#{isCollege},#{address},#{graduationDate},0,0,#{clazzId},#{createTime},#{updateTime})
    </insert>
    <update id="updateStu">
        update student
        <set>
            <if test="name !=null and name!=''">
                name=#{name},
            </if>
            <if test="no !=null and no!=''">
                no=#{no},
            </if>
            <if test="gender !=null">
                gender=#{gender},
            </if>
            <if test="phone !=null and phone!=''">
                phone=#{phone},
            </if>
            <if test="idCard !=null and idCard!=''">
                id_card=#{idCard},
            </if>
            <if test="isCollege !=null">
                is_college=#{isCollege},
            </if>
            <if test="address !=null and address!=''">
                address=#{address},
            </if>
            <if test="degree !=null">
                degree=#{degree},
            </if>
            <if test="graduationDate !=null">
                graduation_date=#{graduationDate},
            </if>
            <if test="clazzId !=null">
                clazz_id=#{clazzId},
            </if>
            update_time=#{updateTime},
        </set>
        where id=#{id}
    </update>

    <!--两种写法，在xml代码里区别就是foreach的写法不同
    sql1: delete from emp where id in (1,2,3,...)
    :(1,2,3,...) 要把左右括号作为开始open和结束end，逗号分开。foreach里写  #{id}就行了
    <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>

    sql2: delete from emp where id=1 or id=2 or id=3 or ...
    id=1 or id=2 or  这样foreach里写id=#{id}
            <foreach collection="ids" item="id" separator="or">
            id=#{id}
        </foreach>
    -->
    <delete id="deleteStu">
        delete from student where
        <foreach collection="ids" item="id" separator="or">
            id=#{id}
        </foreach>
    </delete>
</mapper>
